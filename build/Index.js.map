{"version":3,"sources":["../server/Index.js"],"names":["port","process","env","PORT","app","use","express","json","urlencoded","extended","req","res","next","context","models","URL_API","routes","MenuTypeRoute","RestoCategoryRoute","UsersRoute","RestoShopRoute","RestoMenuRoute","AddressRoute","AddToCart","URL_DOMAIN","AuthJwtRoute","ClitRoute","OrderRoute","dropDatabaseSync","sequelize","sync","force","then","console","log","listen"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;;;;;;;AAbA;AAWA;AAGA;AAGA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,MAAMC,GAAG,GAAG,uBAAZ,C,CACA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQ,4BAAR,E,CACA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,sBAAR,E,CACA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,2BAAR,E,CACA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CAEA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAOK,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAC9BF,EAAAA,GAAG,CAACG,OAAJ,GAAc;AAAEC,IAAAA,MAAM,EAANA;AAAF,GAAd;AACAF,EAAAA,IAAI;AACP,CAHD;AAKA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AACA;;AAGAR,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,OAA9B,EAAuCC,oBAAOC,aAA9C;AACAb,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,WAA9B,EAA2CC,oBAAOE,kBAAlD;AACAd,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,OAA9B,EAAuCC,oBAAOG,UAA9C;AACAf,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,OAA9B,EAAuCC,oBAAOI,cAA9C;AACAhB,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,OAA9B,EAAuCC,oBAAOK,cAA9C;AACAjB,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,SAA9B,EAAyCC,oBAAOM,YAAhD;AACAlB,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,OAA9B,EAAuCC,oBAAOO,SAA9C;AACAnB,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYsB,UAAZ,GAAyB,OAAjC,EAA0CR,oBAAOS,YAAjD;AACArB,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,OAA9B,EAAuCC,oBAAOU,SAA9C;AACAtB,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACC,GAAR,CAAYa,OAAZ,GAAsB,QAA9B,EAAwCC,oBAAOW,UAA/C,E,CAGA;AAGA;;AACA,MAAMC,gBAAgB,GAAG,KAAzB;;AAEAC,uBAAUC,IAAV,CAAe;AAAEC,EAAAA,KAAK,EAAEH;AAAT,CAAf,EAA4CI,IAA5C,CAAiD,YAAY;AACzD,MAAIJ,gBAAJ,EAAsB;AAClBK,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAED9B,EAAAA,GAAG,CAAC+B,MAAJ,CAAWnC,IAAX,EAAiB,MAAM;AACnBiC,IAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BlC,IAAK,EAAhD;AACH,GAFD;AAIH,CATD;;eAaeI,G","sourcesContent":["// 1. pastikan selalu import dotenv di line pertama\nimport \"dotenv/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport compress from 'compression';\nimport cookieParser from 'cookie-parser';\nimport helmet from 'helmet';\n\n\n\n\n//for access models to db\nimport models, { sequelize } from './models/IndexModels';\nimport routes from './routes/IndexRoute'\n// import authJWT from \"./helpers/authJWT\";\n\n\n// declare port\nconst port = process.env.PORT || 1337;\n\nconst app = express();\n// parse body params and attache them to req.body\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(cookieParser())\n// use helmet spy bisa dikenali SEO\napp.use(helmet())\n// secure apps by setting various HTTP headers\napp.use(compress())\n// enable CORS - Cross Origin Resource Sharing\napp.use(cors());\n\n// load models dan simpan di req.context\napp.use(async (req, res, next) => {\n    req.context = { models };\n    next();\n});\n\n/*  app.use(process.env.URL_DOMAIN,(req,res)=>{\n    res.send(\"Hello Eshopay\");\n});  */\n\n\n//auth.setMiddleware(app);\n\n\n// call routes\n// app.post(process.env.URL_DOMAIN+\"/login\",authJWT.authenticate,authJWT.login)\n\n// app.get(process.env.URL_DOMAIN+\"/me\",authJWT.ensureAdmin,(req,res)=>{\n//     res.json(\"coo\");\n// })\n\n\napp.use(process.env.URL_API + \"/type\", routes.MenuTypeRoute);\napp.use(process.env.URL_API + \"/category\", routes.RestoCategoryRoute);\napp.use(process.env.URL_API + \"/user\", routes.UsersRoute);\napp.use(process.env.URL_API + \"/shop\", routes.RestoShopRoute);\napp.use(process.env.URL_API + \"/menu\", routes.RestoMenuRoute);\napp.use(process.env.URL_API + \"/addres\", routes.AddressRoute);\napp.use(process.env.URL_API + \"/cart\", routes.AddToCart);\napp.use(process.env.URL_DOMAIN + \"/auth\", routes.AuthJwtRoute);\napp.use(process.env.URL_API + \"/clit\", routes.ClitRoute);\napp.use(process.env.URL_API + \"/order\", routes.OrderRoute);\n\n\n//use middleware to handle error from others modules\n\n\n// set to false agar tidak di drop tables yang ada didatabase\nconst dropDatabaseSync = false;\n\nsequelize.sync({ force: dropDatabaseSync }).then(async () => {\n    if (dropDatabaseSync) {\n        console.log(\"Database do not drop\");\n    }\n\n    app.listen(port, () => {\n        console.log(`Server is listening on port ${port}`)\n    });\n\n})\n\n\n\nexport default app;"],"file":"Index.js"}