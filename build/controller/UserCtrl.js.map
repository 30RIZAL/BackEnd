{"version":3,"sources":["../../server/controller/UserCtrl.js"],"names":["SALT_ROUND","findAllRows","req","res","result","context","models","users","findAll","send","signup","username","email","user_password","user_handphone","user_roles","body","hashPassword","bcrypt","hash","create","user_name","user_email","dataValues","error","sendStatus","signin","password","findOne","where","compare","cekUser","next","params","id","undefined","isNaN","status","message","user","user_id","deleteRow","destroy","then","catch","updateUser","update","returing"],"mappings":"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","sourcesContent":["import bcrypt from 'bcrypt';\nconst SALT_ROUND = 10;\n\nconst findAllRows = async (req, res) => {\n  const result = await req.context.models.users.findAll();\n  return res.send(result);\n};\n\nconst signup = async (req, res) => {\n  const { username, email, user_password, user_handphone, user_roles } =\n    req.body;\n\n  let hashPassword = user_password;\n  hashPassword = await bcrypt.hash(hashPassword, SALT_ROUND);\n  try {\n    const result = await req.context.models.users.create({\n      user_name: username,\n      user_email: email,\n      user_password: hashPassword,\n      user_handphone: user_handphone,\n      user_roles: user_roles,\n    });\n\n    const { user_name, user_email } = result.dataValues;\n    res.send({ user_name, user_email });\n  } catch (error) {\n    res.sendStatus(404).send(error);\n  }\n};\n\nconst signin = async (req, res) => {\n  const { username, password } = req.body;\n\n  try {\n    const result = await req.context.models.users.findOne({\n      where: { user_name: username },\n    });\n    const { user_name, user_email, user_password } = result.dataValues;\n    const compare = await bcrypt.compare(password, user_password);\n    if (compare) {\n      return res.send({ user_name, user_email });\n    } else {\n      return res.sendStatus(404).send(error);\n    }\n  } catch (error) {\n    return res.sendStatus(404).send(error);\n  }\n};\n\nconst cekUser = async (req, res, next) => {\n  try {\n    if (req.params.id === undefined || isNaN(req.params.id))\n      res.status(400).send({ message: 'Wrong Id User' });\n    const user = await req.context.models.users.findOne({\n      where: { user_id: req.params.id },\n    });\n    req.cekUser = {\n      user_id: user.user_id,\n    };\n    next();\n  } catch (error) {\n    return res.status(500).send({ message: `User ${error}` });\n  }\n};\n\nconst deleteRow = async (req, res) => {\n  const id = req.params.id;\n\n  await req.context.models.users\n    .destroy({\n      where: { user_id: id },\n    })\n    .then((result) => {\n      return res.send('delete ' + result + ' rows.');\n    })\n    .catch((error) => {\n      return res.sendStatus(404).send('Data not found.');\n    });\n};\n\nconst updateUser = async (req, res) => {\n  const id = req.params.id;\n  const { username, email, user_handphone, user_roles } = req.body;\n  try {\n    const result = await req.context.models.users.update(\n      {\n        user_name: username,\n        user_email: email,\n        user_handphone: user_handphone,\n        user_roles: user_roles,\n      },\n      { returing: true, where: { user_id: id } }\n    );\n    return res.send(result.dataValues);\n  } catch (error) {\n    return error;\n  }\n};\nexport default {\n  signup,\n  signin,\n  cekUser,\n  findAllRows,\n  deleteRow,\n  updateUser,\n};\n"],"file":"UserCtrl.js"}