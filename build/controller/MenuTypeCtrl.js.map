{"version":3,"sources":["../../server/controller/MenuTypeCtrl.js"],"names":["findAllRows","req","res","result","context","models","menu_type","findAll","send","findRowById","findByPk","params","id","createRow","mety_name","body","create","error","status","json","message","updateRow","update","returning","where","deleteRow","destroy","then","catch","sendStatus"],"mappings":";;;;;;;AAAA,MAAMA,WAAW,GAAG,OAAMC,GAAN,EAAUC,GAAV,KAAgB;AAChC,QAAMC,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,SAAnB,CAA6BC,OAA7B,EAArB;AACA,SAAOL,GAAG,CAACM,IAAJ,CAASL,MAAT,CAAP;AACH,CAHD;;AAKA,MAAMM,WAAW,GAAG,OAAMR,GAAN,EAAUC,GAAV,KAAgB;AAChC,QAAMC,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,SAAnB,CAA6BI,QAA7B,CACjBT,GAAG,CAACU,MAAJ,CAAWC,EADM,CAArB;AAGA,SAAOV,GAAG,CAACM,IAAJ,CAASL,MAAT,CAAP;AACH,CALD;;AAOA,MAAMU,SAAS,GAAG,OAAMZ,GAAN,EAAUC,GAAV,KAAgB;AAC9B,QAAM;AAACY,IAAAA;AAAD,MAAcb,GAAG,CAACc,IAAxB;;AACA,MAAI;AACA,UAAMZ,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,SAAnB,CAA6BU,MAA7B,CAAoC;AACrDF,MAAAA,SAAS,EAAEA;AAD0C,KAApC,CAArB;AAGA,WAAOZ,GAAG,CAACM,IAAJ,CAASL,MAAT,CAAP;AACH,GALD,CAKE,OAAOc,KAAP,EAAc;AACZ,WAAOf,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,MAAAA,MAAM,EAAE,QADgB;AAExBE,MAAAA,OAAO,EAAE,EAFe;AAGxBH,MAAAA,KAAK,EAAEA;AAHiB,KAArB,CAAP;AAKH;AAEJ,CAfD;;AAiBA,MAAMI,SAAS,GAAG,OAAMpB,GAAN,EAAUC,GAAV,KAAgB;AAC9B,QAAM;AAACY,IAAAA;AAAD,MAAcb,GAAG,CAACc,IAAxB;AACA,QAAMZ,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,SAAnB,CAA6BgB,MAA7B,CACjB;AAACR,IAAAA,SAAS,EAAGA;AAAb,GADiB,EAEjB;AAACS,IAAAA,SAAS,EAAC,IAAX;AACIC,IAAAA,KAAK,EAAG;AAACV,MAAAA,SAAS,EAAGb,GAAG,CAACU,MAAJ,CAAWC;AAAxB;AADZ,GAFiB,CAArB;AAMA,SAAOV,GAAG,CAACM,IAAJ,CAASL,MAAT,CAAP;AACH,CATD;;AAWA,MAAMsB,SAAS,GAAG,OAAMxB,GAAN,EAAUC,GAAV,KAAgB;AAC9B,QAAMU,EAAE,GAAGX,GAAG,CAACU,MAAJ,CAAWC,EAAtB;AAEA,QAAMX,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,SAAnB,CAA6BoB,OAA7B,CAAqC;AACvCF,IAAAA,KAAK,EAAG;AAACV,MAAAA,SAAS,EAAGF;AAAb;AAD+B,GAArC,EAEHe,IAFG,CAEExB,MAAM,IAAG;AACb,WAAOD,GAAG,CAACM,IAAJ,CAAS,YAAUL,MAAV,GAAiB,QAA1B,CAAP;AACH,GAJK,EAIHyB,KAJG,CAIGX,KAAK,IAAG;AACb,WAAOf,GAAG,CAAC2B,UAAJ,CAAe,GAAf,EAAoBrB,IAApB,CAAyB,iBAAzB,CAAP;AACH,GANK,CAAN;AAQH,CAXD;;eAee;AACXR,EAAAA,WADW;AAEXS,EAAAA,WAFW;AAGXI,EAAAA,SAHW;AAIXQ,EAAAA,SAJW;AAKXI,EAAAA;AALW,C","sourcesContent":["const findAllRows = async(req,res)=>{\n    const result = await req.context.models.menu_type.findAll();\n    return res.send(result);\n}\n\nconst findRowById = async(req,res)=>{\n    const result = await req.context.models.menu_type.findByPk(\n        req.params.id\n    );\n    return res.send(result);\n}\n\nconst createRow = async(req,res)=>{\n    const {mety_name} = req.body;\n    try {\n        const result = await req.context.models.menu_type.create({\n            mety_name :mety_name\n        });\n        return res.send(result);\n    } catch (error) {\n        return res.status(404).json({\n            status: \"Failed\",\n            message: \"\",\n            error: error\n        })\n    }\n    \n}\n\nconst updateRow = async(req,res)=>{\n    const {mety_name} = req.body;\n    const result = await req.context.models.menu_type.update(\n        {mety_name : mety_name},\n        {returning:true,\n            where : {mety_name : req.params.id}\n        }\n        );\n    return res.send(result);\n}\n\nconst deleteRow = async(req,res)=>{\n    const id = req.params.id;\n\n    await req.context.models.menu_type.destroy({\n        where : {mety_name : id}\n    }).then(result =>{\n        return res.send(\"delete \"+result+\" rows.\")\n    }).catch(error =>{\n        return res.sendStatus(404).send(\"Data not found.\")\n    });\n    \n}\n\n\n\nexport default {\n    findAllRows,\n    findRowById,\n    createRow,\n    updateRow,\n    deleteRow\n}"],"file":"MenuTypeCtrl.js"}