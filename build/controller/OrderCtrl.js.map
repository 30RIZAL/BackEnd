{"version":3,"sources":["../../server/controller/OrderCtrl.js"],"names":["addOrder","req","res","result","context","models","order_menu","findAll","include","all","where","order_user_id","params","id","order_status","send","createRow","order_name","order_created","order_subtotal","order_qty","order_tax","order_delivery","order_discount","order_promo","order_total_price","order_payment_type","order_payment_trx","body","create","error","status","json","message","updateRow","update","returning","mety_name","deleteRow","destroy","then","catch","sendStatus","payment","next","prices","cekcart","price","discount","tax","due","qty","promo","data","cart_line_items","parseInt","clit_price","clit_qty","cekord","user","cekUser","order","findOne","user_id","cekorder","cancel","Date","orders"],"mappings":"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","sourcesContent":["const addOrder = async (req, res) => {\n  const result = await req.context.models.order_menu.findAll({\n    include: [\n      {\n        all: true,\n      },\n    ],\n    where: { order_user_id: req.params.id, order_status: 'open' },\n  });\n  return res.send(result);\n};\n\n\nconst createRow = async (req, res) => {\n  const {\n    order_name,\n    order_created,\n    order_subtotal,\n    order_qty,\n    order_tax,\n    order_delivery,\n    order_discount,\n    order_promo,\n    order_total_price,\n    order_status,\n    order_payment_type,\n    order_payment_trx,\n    order_user_id,\n  } = req.body;\n  try {\n    const result = await req.context.models.order_menu.create({\n      order_name: order_name,\n      order_created: order_created,\n      order_subtotal: order_subtotal,\n      order_qty: order_qty,\n      order_tax: order_tax,\n      order_delivery: order_delivery,\n      order_discount: order_discount,\n      order_promo: order_promo,\n      order_total_price: order_total_price,\n      order_status: order_status,\n      order_payment_type: order_payment_type,\n      order_payment_trx: order_payment_trx,\n      order_user_id: order_user_id,\n    });\n    return res.send(result);\n  } catch (error) {\n    return res.status(404).json({\n      status: 'Failed',\n      message: '',\n      error: error,\n    });\n  }\n};\n\nconst updateRow = async (req, res) => {\n  const {\n    order_name,\n    order_created,\n    order_subtotal,\n    order_qty,\n    order_tax,\n    order_delivery,\n    order_discount,\n    order_promo,\n    order_total_price,\n    order_status,\n    order_payment_type,\n    order_payment_trx,\n    order_user_id,\n  } = req.body;\n  const result = await req.context.models.order_menu.update(\n    {\n      order_name: order_name,\n      order_created: order_created,\n      order_subtotal: order_subtotal,\n      order_qty: order_qty,\n      order_tax: order_tax,\n      order_delivery: order_delivery,\n      order_discount: order_discount,\n      order_promo: order_promo,\n      order_total_price: order_total_price,\n      order_status: order_status,\n      order_payment_type: order_payment_type,\n      order_payment_trx: order_payment_trx,\n      order_user_id: order_user_id,\n    },\n    {\n      returning: true,\n      where: { mety_name: req.params.id },\n    }\n  );\n  return res.send(result);\n};\n\nconst deleteRow = async (req, res) => {\n  const id = req.params.id;\n\n  await req.context.models.order_menu\n    .destroy({\n      where: { order_name: id },\n    })\n    .then((result) => {\n      return res.send('delete ' + result + ' rows.');\n    })\n    .catch((error) => {\n      return res.sendStatus(404).send('Data not found.');\n    });\n};\n/////////////////////////////////\n\nconst payment = async (req, res, next) => {\n  const prices = req.cekcart;\n  const payment = {};\n  let price = 0;\n  let discount = 0;\n  let tax = 0;\n  let due = 0;\n  let qty = 0;\n  let promo = 0;\n  for (const data of prices.cart_line_items) {\n    try {\n      price += parseInt(data.clit_price);\n      qty += parseInt(data.clit_qty);\n      if (req.all.qty > 1) {\n        discount = 0.05 * price;\n      }\n      tax = (price - discount) * 0.1;\n      due = price - discount + tax;\n      promo = discount;\n      payment['price'] = price;\n      payment['discount'] = discount;\n      payment['tax'] = tax;\n      payment['promo'] = promo;\n      payment['due'] = due;\n      payment['qty'] = qty;\n    } catch (error) {\n      return res.status(500).json({ message: 'Order Error' + error });\n    }\n  }\n  req.payment = payment;\n  next();\n};\n\nconst cekord = async (req, res, next) => {\n  const user = req.cekUser;\n\n  try {\n    const order = await req.context.models.order_menu.findOne({\n      include: [\n        {\n          all: true,\n        },\n      ],\n      where: {\n        order_user_id: user.user_id,\n        order_status: 'open',\n      },\n    });\n    req.cekord = order;\n    next();\n  } catch (error) {\n    return res.status(500).json({ message: 'Input Error' + error });\n  }\n};\n\nconst update = async (req, res, next) => {\n  try {\n    const user = req.cekUser;\n    const cekorder = req.cekord;\n    if (cekorder) {\n      const order = await req.context.models.order_menu.update(\n        {\n          order_payment_trx: req.body.order_payment_trx,\n          order_status: 'open',\n        },\n        {\n          where: {\n            order_user_id: user.user_id,\n            order_name: cekorder.order_name,\n          },\n        }\n      );\n      req.order_menu = order;\n    }\n    next();\n  } catch (error) {\n    return res.status(500).json({ message: 'Order Error' + error });\n  }\n};\n\nconst cancel = async (req, res) => {\n  try {\n    const user = req.cekUser;\n    const cekorder = req.cekord;\n    if (cekorder) {\n      const order = await req.context.models.order_menu.update(\n        {\n          order_status: 'cancelled',\n        },\n        {\n          where: {\n            order_user_id: user.user_id,\n            order_name: cekorder.order_name,\n          },\n        }\n      );\n    }\n  } catch (error) {\n    return res.status(500).json({ message: 'Order Error' + error });\n  }\n  return res.send('Order Cancelled');\n};\n\nconst create = async (req, res, next) => {\n  try {\n    const user = req.cekUser;\n    const cekorder = req.cekord;\n    if (cekorder)\n      return res.status(400).send({ message: 'Please Finish your order' });\n    const order = await req.context.models.order_menu.create({\n      order_created: new Date(),\n      order_subtotal: req.payment.price,\n      order_qty: req.payment.qty,\n      order_tax: req.payment.tax,\n      order_delivery: 5000,\n      order_discount: req.payment.discount,\n      order_promo: req.payment.promo,\n      order_total_price: parseInt(req.payment.due + 5000),\n      order_status: 'open',\n      order_user_id: user.user_id,\n    });\n    req.orders = order;\n    next();\n  } catch (error) {\n    return res.status(500).json({ message: 'Order Error' + error });\n  }\n};\n\n\nexport default {\n  addOrder,\n  createRow,\n  updateRow,\n  deleteRow,\n  payment,\n  cekord,\n  update,\n  cancel,\n  create,\n};\n"],"file":"OrderCtrl.js"}