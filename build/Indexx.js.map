{"version":3,"sources":["../server/Indexx.js"],"names":["passport","require","Strategy","expressSession","middleware","port","process","env","PORT","sessionSecret","SESSION_SECRET","adminPassword","ADMIN_PASSWORD","use","username","password","cb","isAdmin","serializeUser","user","deserializeUser","app","express","json","urlencoded","extended","secret","resave","saveUninitialized","initialize","session","post","authenticate","req","res","success","next","context","models","URL_DOMAIN","routes","authRoute","URL_API","categoryRoute","productRoute","userRoute","handleError","notFound","cors","dropDatabaseSync","sequelize","sync","force","then","console","log","listen","ensureAdmin","status","error"],"mappings":"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","sourcesContent":["// 1. pastikan selalu import dotenv di line pertama\nimport \"dotenv/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport compress from 'compression';\nimport cookieParser from 'cookie-parser';\nimport helmet from 'helmet';\nconst passport = require('passport')\nconst Strategy = require('passport-local').Strategy\nconst expressSession = require('express-session')\nconst middleware = require('./helpers/middleware')\n\n//for access models to db\nimport models, { sequelize } from \"./models/IndexModel\";\nimport routes from './routes/IndexRoute'\n\n\n\n// declare port\nconst port = process.env.PORT || 1337;\nconst sessionSecret = process.env.SESSION_SECRET || 'admin'\nconst adminPassword = process.env.ADMIN_PASSWORD || 'rahasia'\n\npassport.use(\n    new Strategy(function (username, password, cb) {\n        const isAdmin = (username === 'admin') && (password === adminPassword)\n        if (isAdmin) cb(null, { username: 'admin' })\n        cb(null, false)\n    })\n);\n\npassport.serializeUser((user, cb) => cb(null, user))\npassport.deserializeUser((user, cb) => cb(null, user))\n\n\n\nconst app = express();\n// parse body params and attache them to req.body\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(cookieParser())\n// use helmet spy bisa dikenali SEO\napp.use(helmet())\n// secure apps by setting various HTTP headers\napp.use(compress())\n// enable CORS - Cross Origin Resource Sharing\napp.use(cors());\n\n\n\napp.use(\n    expressSession({\n        secret: sessionSecret,\n        resave: false,\n        saveUninitialized: false\n    })\n)\n\napp.use(passport.initialize())\napp.use(passport.session())\n\napp.post('/login', passport.authenticate('local'), (req, res) =>\n    res.json({ success: true })\n)\n\n\n// load models dan simpan di req.context\napp.use(async (req, res, next) => {\n    req.context = { models };\n    next();\n});\n\n/* app.use(process.env.URL_DOMAIN,(req,res)=>{\n    res.send(\"Hello Eshopay\");\n}); */\n\n// call routes\napp.use(process.env.URL_DOMAIN, routes.authRoute);\n\napp.use(process.env.URL_API + \"/category\", routes.categoryRoute);\napp.use(process.env.URL_API + \"/product\", routes.productRoute);\napp.use(process.env.URL_API + \"/users\", routes.userRoute);\n\napp.use(middleware.handleError);\napp.use(middleware.notFound);\napp.use(middleware.cors);\n\n// set to false agar tidak di drop tables yang ada didatabase\nconst dropDatabaseSync = false;\n\nsequelize.sync({ force: dropDatabaseSync }).then(async () => {\n    if (dropDatabaseSync) {\n        console.log(\"Database do not drop\");\n    }\n\n    app.listen(port, () => {\n        console.log(`Server is listening on port ${port}`)\n    });\n\n});\n\nfunction ensureAdmin(req, res, next) {\n    const isAdmin = req.user && req.user.username === 'admin'\n    if (isAdmin) return next()\n    res.status(401).json({ error: 'Unauthorized' })\n}\n\n\n\nexport default app;"],"file":"Indexx.js"}