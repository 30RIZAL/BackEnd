{"version":3,"sources":["../../server/helper/authJWT.js"],"names":["jwt","require","passport","Strategy","jwtSecret","process","env","JWT_SECRET","adminPassword","ADMIN_PASSWORD","jwtOpts","algorithm","expiresIn","use","adminStrategy","authenticate","session","module","exports","login","ensureAdmin","ensureSeller","req","res","next","token","sign","username","user","rolType","userId","email","numberPhone","cookie","httpOnly","json","profile","success","payload","jwtString","headers","authorization","cookies","verify","roleType","isSeller","err","Error","statusCode","replace","password","cb","result","models","users","findOne","where","user_name","console","log","user_id","user_password","user_email","user_roles","user_handphone","dataValues","compare","bcrypt","error"],"mappings":"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","sourcesContent":["const jwt = require(\"jsonwebtoken\");\nconst passport = require(\"passport\");\nconst Strategy = require(\"passport-local\").Strategy;\n\nimport bcrypt from \"bcrypt\";\n\nconst jwtSecret = process.env.JWT_SECRET || \"myjwt\";\nconst adminPassword = process.env.ADMIN_PASSWORD || \"secret\";\nconst jwtOpts = { algorithm: \"HS256\", expiresIn: \"30d\" };\nimport models from \"../models/IndexModels\";\n\npassport.use(adminStrategy());\nconst authenticate = passport.authenticate(\"local\", { session: false });\n\nmodule.exports = {\n  authenticate,\n  login: login,\n  ensureAdmin: ensureAdmin,\n  ensureSeller: ensureSeller,\n};\n\nasync function login(req, res, next) {\n  const token = await sign({\n    username: req.user.username,\n    rolType: req.user.rolType,\n  });\n  const { userId, username, email, rolType, numberPhone } = req.user;\n  res.cookie(\"jwt\", token, { httpOnly: true });\n\n  res.json({\n    profile: { userId, username, email, rolType, numberPhone },\n    success: true,\n    token: token,\n  });\n}\n\nasync function sign(payload) {\n  const token = await jwt.sign(payload, jwtSecret, jwtOpts);\n  return token;\n}\n\nasync function ensureSeller(req, res, next) {\n  const jwtString = req.headers.authorization || req.cookies.jwt;\n  const payload = await verify(jwtString);\n  if (payload.username) {\n    req.user = payload;\n    if (req.user.roleType === \"Seller\") req.isSeller = true;\n    return next();\n  }\n\n  const err = new Error(\"Unauthorized\");\n  err.statusCode = 401;\n  next(err);\n}\n\nasync function ensureAdmin(req, res, next) {\n  const jwtString = req.headers.authorization || req.cookies.jwt;\n  const payload = await verify(jwtString);\n  if (payload.username === \"admin\") return next();\n  const err = new Error(\"Unauthorized\");\n  err.statusCode = 401;\n  next(err);\n}\n\nasync function verify(jwtString = \"\") {\n  jwtString = jwtString.replace(/^Bearer /i, \"\");\n  try {\n    const payload = await jwt.verify(jwtString, jwtSecret);\n    return payload;\n  } catch (err) {\n    err.statusCode = 401;\n    throw err;\n  }\n}\n\nfunction adminStrategy() {\n  return new Strategy(async function (username, password, cb) {\n    try {\n      const result = await models.users.findOne({\n        where: { user_name: username },\n      });\n      console.log(result);\n      const { user_name, user_id, user_password, user_email, user_roles, user_handphone } =\n        result.dataValues;\n      const compare = await bcrypt.compare(password, user_password);\n\n      if (compare)\n        return cb(null, {\n          username: user_name,\n          userId: user_id,\n          email: user_email,\n          rolType: user_roles,\n          numberPhone: user_handphone\n        });\n    } catch (error) {\n      console.log(error);\n    }\n\n    cb(null, false);\n  });\n}"],"file":"authJWT.js"}